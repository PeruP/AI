from collections import defaultdict;
class Solution:
    def __init__(self,head):
        self.family=defaultdict(list)
        self.head=head
        self.dead=set()
    def birth(self,parent,child):
        self.family[parent].append(child)
    def death(self,name):
        self.dead.add(name)
    def inheritance(self):
        self.ans=[]
        self.dfs(self.head)
        return self.ans
    def dfs(self,head):
        if(head not in self.dead):
            self.ans.append(head)
        for i in self.family[head]:
            self.dfs(i)
n=int(input("Enter the no.of relations : "))
he=input("Enter the head : ")
ob=Solution(he)
while(n>0):
    print("Enter the parent and child : ")
    p,c=input().split()
    ob.birth(p,c)
    n=n-1
print(ob.inheritance())
d=int(input("No of people dead : "))
while(d>0):
    dd=input("Name of the dead person : ")
    ob.death(dd)
    print(ob.inheritance())
    d=d-1

OUTPUT : 

Enter the no.of relations : 5
Enter the head : A
Enter the parent and child : 
A B
Enter the parent and child : 
A C
Enter the parent and child : 
B D
Enter the parent and child : 
C E
Enter the parent and child : 
D F
['A', 'B', 'D', 'F', 'C', 'E']
No of people dead : 2
Name of the dead person : A
['B', 'D', 'F', 'C', 'E']
Name of the dead person : F
['B', 'D', 'C', 'E']